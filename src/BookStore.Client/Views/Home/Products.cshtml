@model IEnumerable<BookStore.Application.DTOs.BookDto>
@inject BookStore.Application.Services.IFileService fileService
@{
    ViewData["Title"] = "Products";
}
<section class="product spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-3 col-md-5">
                <div id="priceFilter">
                    <div class="mb-2"><b>Price</b></div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input"
                               type="checkbox"
                               id="price-2"
                               value="under-80" />
                        <label class="form-check-label" for="price-2">0đ - 80.000đ</label>
                    </div>

                    <div class="form-check form-check-inline">
                        <input class="form-check-input"
                               type="checkbox"
                               id="price-3"
                               value="80-to-120" />
                        <label class="form-check-label" for="price-3">80.000đ - 120.000đ</label>
                    </div>

                    <div class="form-check form-check-inline">
                        <input class="form-check-input"
                               type="checkbox"
                               id="price-4"
                               value="120-to-200" />
                        <label class="form-check-label" for="price-4">120.000đ - 200.000đ</label>
                    </div>

                    <div class="form-check form-check-inline">
                        <input class="form-check-input"
                               type="checkbox"
                               id="price-5"
                               value="over-200" />
                        <label class="form-check-label" for="price-5">Over 200đ</label>
                    </div>
                </div>

                <div id="genresFilter">
                    <div class="mb-2"><b>Genres</b></div>
                </div>

                <div id="factoryFilter">
                    <div class="mb-2"><b>Manufacturer</b></div>
                </div>
                <div class="sidebar" style="margin-top: 50px">
                    <div class="sidebar__item">
                        <div class="latest-product__text">
                            <h4>Top Discounted</h4>
                            <div class="latest-product__slider owl-carousel">
                                @{
                                    int productCount = 0;
                                    int count = Model?.Count() ?? 0;
                                }

                                @if (Model != null && count > 0)
                                {
                                    <div class="latest-product__slider__item">
                                        @foreach (var item in Model)
                                        {
                                            <a asp-controller="Item" asp-action="GetBookDetail" asp-route-id="@item.Id" target="_blank" class="latest-product__item">
                                                <div class="latest-product__item__pic">
                                                    <img src="@fileService.GetImageUrl(item.Image)" alt="@item.Name" />
                                                </div>
                                                <div class="latest-product__item__text">
                                                    <h6>@item.Name</h6>
                                                    <span>@item.Price</span>
                                                </div>
                                            </a>
                                            productCount++;
                                            if (productCount % 3 == 0 && productCount < count)
                                            {
                                                @:</div>
                                                @:<div class="latest-prdouct__slider__item">
                                            }
                                        }
                                    </div>
                                }
                                else
                                {
                                    <span>No products found</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-9 col-md-7">
                <div class="filter__item">
                    <div class="section-title product__discount__title">
                        <div class="filter-ajax">
                            <ol id="display_fillter_current" style="flex: 2;">
                                </ol>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-lg-4 col-md-5">
                                <div class="filter__sort">
                                    <span>Sort By</span>
                                    <select>
                                        <option value="0">ASC</option>
                                        <option value="0">DESC</option>
                                        <option value="0">DEFAULT</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-4">
                                <div class="filter__found">
                                    <h6><span>16</span> Products found</h6>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                    </div>
                    <div class="product__pagination">
                        <a href="#">1</a>
                        <a href="#">2</a>
                        <a href="#">3</a>
                        <a href="#"><i class="fa fa-long-arrow-right"></i></a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts {
    <script>
        $(document).ready(() => {

            // render checkbox
            async function loadFilterData(url, containerId, inputName) {
                try {
                    const response = await $.ajax({
                        url: url,
                        method: 'GET'
                    });

                    response.forEach(item => {
                        const checkboxHtml = `
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="checkbox" id="${inputName}-${item.id}" value="${item.name}" />
                                            <label class="form-check-label" for="${inputName}-${item.id}">${item.name}</label>
                                        </div>`;
                        $(containerId).append(checkboxHtml);
                    });
                } catch (error) {
                    console.error(`Failed to load data from ${url}`);
                }
            }
            async function loadFilters() {
                await loadFilterData('/api/filter/genres', '#genresFilter', 'genres');
                await loadFilterData('/api/filter/factories', '#factoryFilter', 'factory');
            }
            loadFilters();

            $(document).on('change', '.form-check-input', updateDisplayFilter);
            function updateDisplayFilter() {
                const displayFilter = document.getElementById('display_fillter_current');
                if (!displayFilter) return;

                displayFilter.innerHTML = '';
                const selectedCheckboxes = document.querySelectorAll('.form-check-input:checked');

                selectedCheckboxes.forEach((checkbox) => {
                    const filterType = checkbox.closest('div').parentNode.querySelector('b').textContent;
                    const label = checkbox.nextElementSibling.textContent;

                    const li = document.createElement('li');
                    li.innerHTML = `
                            <a data-id="${checkbox.id}" title="delete" class="btn-remove">Delete</a>
                            <span class="label">${filterType}: ${label}</span>`;
                    displayFilter.appendChild(li);
                });

                updateUrlParams();
                document.querySelector('.filter-text-header').style.display = displayFilter.querySelectorAll('li').length > 0 ? 'block' : 'none';
            }

            $(document).on('click', '.btn-remove', function () {
                const checkbox = document.getElementById($(this).data('id'));
                if (checkbox) {
                    checkbox.checked = false;
                    updateDisplayFilter();
                }
            });

            function updateUrlParams(resetPage = true) {
                const selectedFilters = {
                    factory: getSelectedValues('#factoryFilter .form-check-input'),
                    genres: getSelectedValues('#genresFilter .form-check-input'),
                    price: getSelectedValues('#priceFilter .form-check-input'),
                    sort: $('.filter__sort select').val()
                };

                const currentUrl = new URL(window.location.href);
                const searchParams = currentUrl.searchParams;

                if (resetPage) {
                    searchParams.set('page', '1');
                }
                searchParams.set('sort', selectedFilters.sort || '');

                ['factory', 'genres', 'price'].forEach(filterType => {
                    searchParams.delete(filterType);
                    if (selectedFilters[filterType].length) {
                        searchParams.set(filterType, selectedFilters[filterType].join(','));
                    }
                });

                window.history.pushState(null, '', currentUrl.toString());
            }
            function getSelectedValues(selector) {
                return $(selector + ':checked').map(function () {
                    return $(this).val();
                }).get();
            }
        });
    </script>  
}